{
  "emailConfigs" : [
    { "name" : "gmail",
      "description" : "gmail account access in EF",
      "mailFrom" : "mr.marco.a.morales@gmail.com",
      "mailHost" : "smtp.gmail.com",
      "mailPort" : "465",
      "mailProtocol" : "SMTPS",
      "mailUser" : "mr.marco.a.morales@gmail.com"
    }
  ],

  "credentials" : [
    { "name" : "Artifactory",
      "project" : "@@PROJECTNAMETOKEN@@",
      "UserName" : "myusername",
      "passwordFile" : "password-artifactory.txt"
    },
    { "name" : "Jenkins",
      "project" : "@@PROJECTNAMETOKEN@@",
      "UserName" : "myusername",
      "passwordFile" : "password-jenkins.txt"
    }
  ],

  "users" : [
    { "name" : "marco",
      "fullUserName" : "Marco Morales",
      "email" : "mmorales@electric-cloud.com"
    },
    { "name" : "seymour",
      "fullUserName" : "Seymour Butz",
      "email" : "sbutz@electric-cloud.com"
    }
  ],

  "project" : {
    "name" : "@@PROJECTNAMETOKEN@@",
    "description" : "Example of a pipeline with entry points of each type",

    "procedures" : [
      {"name" : "Stub",
        "description" : "Placeholder that shows a really fast SUCCESS"}
    ],

    "environments" : [
      {
        "name" : "ww-cluster-dev",
        "clusters" : [
          {
            "name" : "openshiftcluster",
            "pluginKey" : "EC-OpenShift",
            "provisionParameter" : {
              "config": "complex-demo",
              "project": "ww-demo-dev"
            }
          }
        ]
      },
      {
        "name" : "ww-cluster-qa",
        "clusters" : [
          {
            "name" : "openshiftcluster",
            "pluginKey" : "EC-OpenShift",
            "provisionParameter" : {
              "config": "complex-demo",
              "project": "ww-demo-qa"
            }
          }
        ]
      },
      {
        "name" : "ww-cluster-prod",
        "clusters" : [
          {
            "name" : "openshiftcluster",
            "pluginKey" : "EC-OpenShift",
            "provisionParameter" : {
              "config": "complex-demo",
              "project": "ww-demo-prod"
            }
          }
        ]
      }
    ],

    "services" : [
      {
        "name" : "Front End Service",
        "description" : "Front End",
        "containers" : [
          {
            "name" : "frontend",
            "description" : "The Front End container",
            "command" : "null",
            "cpuCount" : "0.1",
            "cpuLimit" : "0.3",
            "credentialName" : "null",
            "entryPoint" : "null",
            "imageName" : "weaveworksdemos/front-end",
            "imageVersion" : "0.3.12",
            "memoryLimit" : "1024",
            "memorySize" : "100",
            "registryUri" : "null",
            "serviceName" : "frontend",
            "environmentVariables" : [
              {
                "name" : "SESSION_REDIS",
                "type" : "string",
                "value" : "true"
              }
            ],
            "ports" : [
              {
                "name" : "uiport",
                "containerPort" : "8079"
              }
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy frontend service",
            "description" : "An application-level process that deploys the front end microservice",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the frontend container",
                "subservice" : "Front End Service",
                "container" : "frontend"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "User Service",
        "description" : "The User service",
        "containers" : [
          {
            "name" : "user",
            "description" : "User Service",
            "command" : "null",
            "cpuCount" : "0.1",
            "cpuLimit" : "0.3",
            "credentialName" : "null",
            "entryPoint" : "null",
            "imageName" : "weaveworksdemos/user",
            "imageVersion" : "0.4.4",
            "memoryLimit" : "100",
            "memorySize" : "100",
            "registryUri" : "null",
            "serviceName" : "user",
            "environmentVariables" : [
              {
                "name" : "MONGO_HOST",
                "type" : "string",
                "value" : "userdb:27017"
              },
              {
                "name" : "ZIPKIN",
                "type" : "string",
                "value" : "http://zipkin.zipkin.svc.cluster.local:9411/api/v1/spans"
              }
            ],
            "ports" : [
              {
                "name" : "http",
                "containerPort" : "8079"
              }
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy user service",
            "description" : "An service-level process that deploys the user microservice",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the user services",
                "subservice" : "User Service",
                "container" : "user"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Zipkincron Service",
        "description" : "The zipkincron service",
        "containers" : [
          {
            "name" : "zipkincron",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "zipkincron",
            "environmentVariables" : [
              {
                "name" : "MYSQL_HOST",
                "type" : "string",
                "value" : "zipkindb"
              },
              {
                "name" : "MYSQL_PASS",
                "type" : "string",
                "value" : "zipkin"
              },
              {
                "name" : "MYSQL_USER",
                "type" : "string",
                "value" : "zipkin"
              },
              {
                "name" : "STORAGE_TYPE",
                "type" : "string",
                "value" : "mysql"
              }

            ],
            "ports" : [
              {
                "name" : "zipkinport",
                "containerPort" : "80"
              }
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy zipkincron service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the user services",
                "subservice" : "zipkincron Service",
                "container" : "zipkincron"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Orders Service",
        "description" : "The orders service",
        "containers" : [
          {
            "name" : "orders",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "orders",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy orders service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the orders services",
                "subservice" : "orders Service",
                "container" : "orders"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "UserDB Service",
        "description" : "The userdb service",
        "containers" : [
          {
            "name" : "userdb",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "userdb",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy userdb service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the userdb services",
                "subservice" : "userdb Service",
                "container" : "userdb"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "RabbitMQ Service",
        "description" : "The rabbitmq service",
        "containers" : [
          {
            "name" : "rabbitmq",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "rabbitmq",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy rabbitmq service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the rabbitmq services",
                "subservice" : "rabbitmq Service",
                "container" : "rabbitmq"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Payment Service",
        "description" : "The payment service",
        "containers" : [
          {
            "name" : "payment",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "payment",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy payment service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the payment services",
                "subservice" : "payment Service",
                "container" : "payment"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Catalogue-DB Service",
        "description" : "The catalogue-db service",
        "containers" : [
          {
            "name" : "catalogue-db",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "catalogue-db",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy catalogue-db service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the catalogue-db services",
                "subservice" : "catalogue-db Service",
                "container" : "catalogue-db"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "CartsDB Service",
        "description" : "The cartsdb service",
        "containers" : [
          {
            "name" : "cartsdb",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "cartsdb",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy cartsdb service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the cartsdb services",
                "subservice" : "cartsdb Service",
                "container" : "cartsdb"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "OrdersDB Service",
        "description" : "The ordersdb service",
        "containers" : [
          {
            "name" : "ordersdb",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "ordersdb",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy ordersdb service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the ordersdb services",
                "subservice" : "ordersdb Service",
                "container" : "ordersdb"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Carts Service",
        "description" : "The carts service",
        "containers" : [
          {
            "name" : "carts",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "carts",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy carts service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the carts services",
                "subservice" : "carts Service",
                "container" : "carts"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "QueueMaster Service",
        "description" : "The queuemaster service",
        "containers" : [
          {
            "name" : "queuemaster",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "queuemaster",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy queuemaster service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the queuemaster services",
                "subservice" : "queuemaster Service",
                "container" : "queuemaster"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Catalogue Service",
        "description" : "The catalogue service",
        "containers" : [
          {
            "name" : "catalogue",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "catalogue",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy catalogue service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the catalogue services",
                "subservice" : "catalogue Service",
                "container" : "catalogue"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "ZipkinDB Service",
        "description" : "The zipkindb service",
        "containers" : [
          {
            "name" : "zipkindb",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "zipkindb",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy zipkindb service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the zipkindb services",
                "subservice" : "zipkindb Service",
                "container" : "zipkindb"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Zipkin Service",
        "description" : "The zipkin service",
        "containers" : [
          {
            "name" : "zipkin",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "zipkin",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy zipkin service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the zipkin services",
                "subservice" : "zipkin Service",
                "container" : "zipkin"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      },
      {
        "name" : "Shipping Service",
        "description" : "The shipping service",
        "containers" : [
          {
            "name" : "shipping",
            "description" : "Zipkin Cron Service",
            "command" : "-f",
            "cpuCount" : "null",
            "cpuLimit" : "null",
            "credentialName" : "null",
            "entryPoint" : "crond",
            "imageName" : "openzipkin/zipkin-dependencies",
            "imageVersion" : "1.4.0",
            "memoryLimit" : "null",
            "memorySize" : "null",
            "registryUri" : "null",
            "serviceName" : "shipping",
            "environmentVariables" : [
            ],
            "ports" : [
            ]
          }
        ],
        "processes" : [
          {
            "name" : "Deploy shipping service",
            "description" : "An service-level process that deploys microservices",
            "processType" : "DEPLOY",
            "processSteps" : [
              {
                "name" : "deploy container",
                "processStepType" : "service",
                "description" : "Deploy the shipping services",
                "subservice" : "shipping Service",
                "container" : "shipping"
              }
            ]
          }
        ],
        "environmentMaps" : [
        ]
      }
    ],

    "pipelines" : [
      {
        "name": "WeaveWorks Pipeline",
        "description" : "Updated WW pipeline with some standard features",

        "formalParameters": [
          {
            "name" : "doSnapshot",
            "type" : "checkbox",
            "description" : "Enable if we should take a snapshot on each deployment",
            "defaultValue" : "true",
            "orderIndex" : "1",
            "label" : "Take snapshot?",
            "expansionDeferred" : "0",
            "checkedValue" : "true",
            "initiallyChecked" : "true",
            "uncheckedValue" : "false"
          },
          {
            "name" : "doService",
            "type" : "checkbox",
            "description" : "Enable if we should deploy the Service",
            "defaultValue" : "true",
            "orderIndex" : "1",
            "label" : "Deploy Service?",
            "expansionDeferred" : "0",
            "checkedValue" : "true",
            "initiallyChecked" : "true",
            "uncheckedValue" : "false"
          }
        ],

        "stages": [
          {
            "name": "DEV",
            "description" : "This stage contains entry points to illustrate different types of tasks",
            "gates" : [
              {
                "gateType" : "POST",
                "task" :
                {
                  "name" : "Gate out of First Stage",
                  "description" : "Show an approval gate out of a stage",
                  "taskType" : "APPROVAL",
                  "approver" : "marco",
                  "condition" : "$[enableGates]"
                }
              }
            ],
            "tasks": [
              {
                "name": "Deploy Group",
                "description" : "Group the software into one",
                "taskType" : "GROUP",
                "projectName" : "@@PROJECTNAMETOKEN@@",
                "subproject" : "@@PROJECTNAMETOKEN@@"
              },
              {
                "name": "Deploy-Service",
                "description" : "Deploy a Service",
                "taskType" : "PROCESS",
                "taskProcessType" : "SERVICE",
                "groupName" : "Deploy Group",
                "condition" : "$[doService]",
                "environmentName" : "ww-cluster-dev",
                "environmentProjectName" : "@@PROJECTNAMETOKEN@@",
                "subservice" : "WeaveWorks FE Service",
                "subprocess" : "Deploy Service",
                "subproject" : "@@PROJECTNAMETOKEN@@",
                "actualParameters" : [
                  { "name": "ec_enforceDependencies", "value" : "0" }
                ]
              },
              {
                "name": "Utility - Create Snapshot",
                "description" : "Run a utility function",
                "condition" : "$[doSnapshot]",
                "taskType" : "UTILITY",
                "subpluginKey" : "EF-Utilities",
                "subprocedure" : "Create Snapshot",
                "actualParameters" : [
                  {"name" : "ApplicationName", "value" : "$[/myApplication/applicationName]"},
                  {"name" : "EnvironmentName", "value" : "$[/myEnvironment/environmentName]"},
                  {"name" : "EnvironmentProjectName", "value" : "$[/myEnvironment/@@PROJECTNAMETOKEN@@]"},
                  {"name" : "Overwrite", "value" : "false"},
                  {"name" : "ProjectName", "value" : "$[/myApplication/@@PROJECTNAMETOKEN@@]"},
                  {"name" : "ServiceName", "value" : "$[/myService/serviceName]"},
                  {"name" : "SnapshotName", "value" : "mysnap-1.0"}
                ]
              }
            ]
          }
        ]
      }
    ]

  },

  "resources" : [
    "@@PROJECTNAMETOKEN@@-dev",
    "@@PROJECTNAMETOKEN@@-qa",
    "@@PROJECTNAMETOKEN@@-prod"
  ]

}
